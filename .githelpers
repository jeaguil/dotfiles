#!/bin/bash

HASH="%C(always,yellow)%h%C(always,reset)"
RELATIVE_TIME="%C(always,green)%ar%C(always,reset)"
AUTHOR="%C(always,bold blue)%an%C(always,reset)"
REFS="%C(always,red)%d%C(always,reset)"
SUBJECT="%s"

FORMAT="$HASH $RELATIVE_TIME{$AUTHOR{$REFS $SUBJECT"

pretty_git_log() {
  git log --pretty="format:$FORMAT" "$*" |
  less -XRS --quit-if-one-screen
}

# Checks out a remote branch (if it exists) and creates a local branch tracking the remote branch
pull_remote() {
  if git rev-parse --quiet --verify "$1"; then
    echo "Local branch $1 already exists.";
  else
    git fetch origin "$1" && git checkout -b "$1" --track origin/"$1";
  fi
}

# Finds and switches to a local branch that matches the specified prefix
switch_prefix() {
  branch=$(git branch --list "$1*" | head -n 1 | sed "s/^[* ]*//");
  if [ -z "$branch" ]; then
    echo "No branch found matching prefix $1";
  else
    git switch "$branch";
  fi;
}

# Sets the upstream branch if remote branch exists
set_upstream() {
  if git rev-parse --quiet --verify "origin/$1"; then
    git branch --set-upstream-to=origin/"$1" "$1";
  else
    echo "Remote branch origin/$1 does not exist.";
  fi
}